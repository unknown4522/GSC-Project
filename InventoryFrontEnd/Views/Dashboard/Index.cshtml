@using InventoryFrontEnd.Models;
@model Modelall
@{
    ViewBag.Title = "Dashboard";
}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Dashboard</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Chart.js CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>

        body {
            background-color: #f8f9fa;
        }

        .sidebar {
            min-height: 100vh;
            background-color: #ffffff;
            border-right: 1px solid #dee2e6;
        }

            .sidebar .nav-link {
                color: #495057;
                transition: background-color 0.2s ease, color 0.2s ease;
            }

                .sidebar .nav-link:hover {
                    background-color: #e9ecef;
                    color: #000;
                    text-decoration: none;
                }

                .sidebar .nav-link.active {
                    background-color: #e9ecef;
                    font-weight: 500;
                }

        .card-hover:hover {
            transform: translateY(-4px);
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
            transition: all 0.2s ease;
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <div class="row">
            <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
                <div class="container-fluid">
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                </div>
            </nav>
            <div class="col-md-2 mb-4">
                <div class="card shadow rounded-4 h-100">
                    <div class="card-body">
                        <h4 class="text-primary">@ViewBag.campus_name</h4>
                        <h6 class="mb-3">Navigation</h6>
                        <a href="@Url.Action("Index", "Dashboard", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-2 w-100 text-start">
                            <i class="bi bi-tags me-1"></i>Home
                        </a>
                        <a href="@Url.Action("Campus", "Inventory", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-2 w-100 text-start">
                            <i class="bi bi-bank2"></i>Campus List
                        </a>
                        <a href="@Url.Action("brandlist", "Inventory", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-2 w-100 text-start">
                            <i class="bi bi-tags me-1"></i> Brand List
                        </a>
                        <a href="@Url.Action("Item_list", "Inventory", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-2 w-100 text-start">
                            <i class="bi bi-box-fill"></i> Item List
                        </a>
                        <a href="@Url.Action("rooms", "Inventory", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-2 w-100 text-start">
                            <i class="bi bi-tags me-1"></i> Room List
                        </a>
                        <a href="@Url.Action("materialslist", "Materials", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-3 w-100 text-start">
                            <i class="bi bi-tags me-1"></i>Materials List
                        </a>
                        <a href="@Url.Action("itemlogs", "Inventory", new { campus_name = ViewBag.campus_name })"
                           class="btn btn-outline-secondary mb-3 w-100 text-start">
                            <i class="bi bi-clipboard2-data"></i> Item Logs
                        </a>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-10 py-4">
                <!-- Stats Cards -->
                <div class="row g-3 mb-4">
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-hover shadow-sm rounded-4 p-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-card-list fs-1 text-info me-3"></i>
                                <div>
                                    <h6 class="text-muted">Total Items</h6>
                                    <h3 class="mb-0">@Model.Allitems.Count()</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-hover shadow-sm rounded-4 p-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-building fs-1 text-success me-3"></i>
                                <div>
                                    <h6 class="text-muted">Total Rooms</h6>
                                    <h3 class="mb-0">@Model.Room_list.Count()</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-hover shadow-sm rounded-4 p-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-people fs-1 text-warning me-3"></i>
                                <div>
                                    <h6 class="text-muted">Users Online</h6>
                                    <h3 class="mb-0">@Model.Room_list.Count()</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-lg-3">
                        <div class="card card-hover shadow-sm rounded-4 p-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-clock-history fs-1 text-danger me-3"></i>
                                <div>
                                    <h6 class="text-muted">Today Logs</h6>
                                    @*<h3 class="mb-0">@Model.ItemLogsToday.Count()</h3>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Chart Card -->
                <div class="card shadow-sm rounded-4 p-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="text-primary mb-0">Items Added Per Hour</h5>
                        <select class="form-select w-auto" id="hourRange">
                            <option value="12">Last 12h</option>
                            <option value="24" selected>Last 24h</option>
                            <option value="48">Last 48h</option>
                        </select>
                    </div>
                    <canvas id="itemsPerHourChart" height="100"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize Chart.js
        const ctx = document.getElementById('itemsPerHourChart').getContext('2d');
        let itemsChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Items',
                    data: [],
                    fill: true,
                    tension: 0.4
                }]
            },
            options: { responsive: true }
        });

        // Fetch data based on range
        document.getElementById('hourRange').addEventListener('change', function() {
            const hours = this.value;
            fetch(`@Url.Action("GetItemsPerHour", "Dashboard")?campus_name=@ViewBag.campusName&hours=${hours}`)
                .then(res => res.json())
                .then(data => {
                    itemsChart.data.labels = data.map(d => d.hour);
                    itemsChart.data.datasets[0].data = data.map(d => d.count);
                    itemsChart.update();
                });
        });
    </script>
</body>
</html>
@*updated 5/8/2025*@